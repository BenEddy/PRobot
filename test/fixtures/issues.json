[
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/63",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/63/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/63/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/63/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/63",
    "id": 191065455,
    "number": 63,
    "title": "By default, ignore events triggered by the bot",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-11-22T17:01:54Z",
    "updated_at": "2016-11-22T17:01:54Z",
    "closed_at": null,
    "body": "@jonico made a great suggestion to default to ignoring events triggered by the bot to avoid the possibilities of infinite loops.\r\n\r\nIt would be the equivalent of adding a default filter on all workflows:\r\n\r\n```js\r\non('issues.opened')\r\n  // ignore events from the demo installation\r\n  .filter(event => event.payload.sender.login != 'probot-demo[bot]' )\r\n  // or just ignore all bots\r\n  .filter(event => event.payload.sender.type != 'Bot' )\r\n  .close();\r\n```\r\n\r\nI haven't thought much about configuration, but here are a few options:\r\n\r\n### Configure\r\n\r\nOne option is to have a `configure` function for setting defaults, and allow the `on` listener to take those options for overriding on specific workflows:\r\n\r\n```js\r\nconfigure({ignoreOwnEvents: false});\r\n\r\n// Uses default configuration\r\non('issue_comment.create').close();\r\n\r\n// Override default configuration\r\non('issue_comment.create', {ignoreOwnEvents: true}).close();\r\n```\r\n\r\n### Middleware\r\n\r\nAnother approach could be like \"middleware\":\r\n\r\n```js\r\nuse(filter.ignoreOwnEvents);\r\n\r\n// Default, which \r\non('issue_comment.create').close();\r\n\r\n// Disable middleware for a specific workflow\r\non('issue_comment.create', {\"filter.ignoreOwnEvents\": false}).\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/62",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/62/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/62/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/62/events",
    "html_url": "https://github.com/bkeepers/PRobot/pull/62",
    "id": 190875022,
    "number": 62,
    "title": "WIP: Timers",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-11-22T00:26:08Z",
    "updated_at": "2016-11-25T03:10:31Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/bkeepers/PRobot/pulls/62",
      "html_url": "https://github.com/bkeepers/PRobot/pull/62",
      "diff_url": "https://github.com/bkeepers/PRobot/pull/62.diff",
      "patch_url": "https://github.com/bkeepers/PRobot/pull/62.patch"
    },
    "body": "This is the beginning of figuring out timers (#32). The goal is to be able to do something like this:\r\n\r\n```js\r\nevery('day').find.issues({labels: 'stale'}).filter.lastActive(7, 'days').close();\r\n```\r\n\r\n- [ ] Finders - some method for finding the data to act on.\r\n- [ ] Filters - better ways to filter the found things\r\n- [ ] Perform workflow actions on found things (e.g. `find.issues(â€¦).label('stale')`)\r\n- [ ] Persist configs for installed integrations\r\n  - [ ] Update saved config on changes\r\n\r\ncc @mcolyer @lee-dohm"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/61",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/61/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/61/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/61/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/61",
    "id": 190416350,
    "number": 61,
    "title": "How secure is Node's vm for running untrusted code?",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-11-18T20:38:29Z",
    "updated_at": "2016-11-20T01:36:04Z",
    "closed_at": null,
    "body": "Thanks to @paulcbetts' suggestion and @mcolyer's work, PRobot is now [configured](https://github.com/bkeepers/PRobot/blob/master/lib/configuration.js) via JavaScript. Before investing too much in this direction, I'd like to gain confidence that this approach can safely run un-trusted scripts.\r\n\r\nFor background on this project: this is a bot that anyone can install on their repository. It will read the `.probot.js` file in the repository to configure workflows that trigger in response to webhooks. Those workflow include actions on the repository, such as commenting, managing labels and assignees, or eventually anythign you can do through the GitHub API.\r\n\r\nThe [current implementation](https://github.com/bkeepers/PRobot/blob/master/lib/sandbox.js) uses Node's [vm](https://nodejs.org/api/vm.htm) API to create a new context.  At the moment, the sandbox only exposes an `on` method, which creates a new [Workflow](https://github.com/bkeepers/PRobot/blob/master/lib/workflow.js). The functions on workflow mostly just mutate data, which is used afterward to determinee behavior.\r\n\r\nA few questions to start:\r\n\r\n- Is there any way for code executed into the new context to access code/secrets/anything from the calling context without it being passed in?\r\n- Is there a better/safer way to accomplish this? Should we look into separate processes that use RPC?\r\n\r\ncc @mcolyer @paulcbetts @zeke @nathansobo"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/57",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/57/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/57/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/57/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/57",
    "id": 189561748,
    "number": 57,
    "title": "Syntax errors in examples",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-11-16T02:03:33Z",
    "updated_at": "2016-11-16T02:03:46Z",
    "closed_at": null,
    "body": "A bunch of the [examples](https://github.com/bkeepers/PRobot/blob/master/docs/examples.md) either have syntax errors or use features that are not implemented. Ideally those would be separated into examples that work and examples that are aspirational (bonus points for tests that check that it is at least is valid syntax)."
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/53",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/53/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/53/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/53/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/53",
    "id": 186352827,
    "number": 53,
    "title": "Use PRobot for keeping labels, templates, etc in sync across repos",
    "user": {
      "login": "lee-dohm",
      "id": 1038121,
      "avatar_url": "https://avatars.githubusercontent.com/u/1038121?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lee-dohm",
      "html_url": "https://github.com/lee-dohm",
      "followers_url": "https://api.github.com/users/lee-dohm/followers",
      "following_url": "https://api.github.com/users/lee-dohm/following{/other_user}",
      "gists_url": "https://api.github.com/users/lee-dohm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lee-dohm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lee-dohm/subscriptions",
      "organizations_url": "https://api.github.com/users/lee-dohm/orgs",
      "repos_url": "https://api.github.com/users/lee-dohm/repos",
      "events_url": "https://api.github.com/users/lee-dohm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lee-dohm/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-10-31T17:57:04Z",
    "updated_at": "2016-11-07T21:55:07Z",
    "closed_at": null,
    "body": "The Atom team has over 190 public repositories. Manually keeping all of the standard labels, templates, Codes of Conduct, Contributing guides, etc in sync across all of them is a [Sisyphean task](https://en.wikipedia.org/wiki/Sisyphus).\r\n\r\nIt would be great if PRobot could handle this for us."
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/50",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/50/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/50/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/50/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/50",
    "id": 186094631,
    "number": 50,
    "title": "Validate syntax when making config changes",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-10-29T18:54:04Z",
    "updated_at": "2016-10-29T18:54:04Z",
    "closed_at": null,
    "body": "When there is a push with changes to the `.probot` file, it should validate the syntax of the change and [call the status API](https://developer.github.com/v3/repos/statuses/) with the result. \n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/49",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/49/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/49/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/49/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/49",
    "id": 186093488,
    "number": 49,
    "title": "Use something besides \"@\" for accessing payload values",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-10-29T18:30:23Z",
    "updated_at": "2016-10-29T18:30:23Z",
    "closed_at": null,
    "body": "Currently `@` is used to access payload values:\n\n```\nif @pull_request.title contains \"WIP\"\n```\n\nSince `@` is used for @mentions on GitHub, I imagine there will be use cases later on where the grammar should handle user and team mentions. \n- `if $pull_request.title contains \"WIP\"`\n- `if {{pull_request.title}} contains \"WIP\"` - This is ugly, but mustache syntax can already be used in string templates, so consistency might be nice.\n- ???\n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/42",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/42/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/42/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/42/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/42",
    "id": 183321159,
    "number": 42,
    "title": "Use content from repository in action",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-10-17T04:05:27Z",
    "updated_at": "2016-10-17T04:05:27Z",
    "closed_at": null,
    "body": "Keeping the content for actions in the repository will make it easier for maintainers to evolve them, will make the bot config easier to read, and will make it easier for behaviors to be reused.\n\nAt the moment, `comment` is the only action that can use this, but there may eventually be others.\n\nHere's an example of how this could work:\n\n``` yml\n- then:\n    comment:\n      from_file: \".github/REPLY_TEMPLATE.md\"\n```\n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/40",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/40/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/40/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/40/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/40",
    "id": 183319460,
    "number": 40,
    "title": "Add option to include configuration from file or another repository",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-10-17T03:46:55Z",
    "updated_at": "2016-10-17T03:46:55Z",
    "closed_at": null,
    "body": "Including configuration from another repository will be incredibly useful for a couple use cases:\n1. Projects that use many repositories, like [Atom](github.com/atom), can store standard behaviors in one repository, and point various plugins and components to those configurations.\n2. Encouraging reuse and standardization of behaviors across projects\n\nThe include feature should work for:\n- one or more files in the same repo\n- one or more repositories (defaulting to `.probot.yml`)\n- specific paths in other repositories\n- specific ref in other repositories\n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/34",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/34/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/34/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/34/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/34",
    "id": 182640654,
    "number": 34,
    "title": "Proper error handling",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-10-12T21:37:10Z",
    "updated_at": "2016-10-12T21:37:10Z",
    "closed_at": null,
    "body": "There is absolutely no error handling right now, and there are at least a few kinds of errors that are already common. Promises are heavily used already, so it should be pretty straight forward to hook in some kind of proper error handling.\n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/32",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/32/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/32/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/32/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/32",
    "id": 182639867,
    "number": 32,
    "title": "Timers and scheduled tasks",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-10-12T21:33:15Z",
    "updated_at": "2016-10-12T21:33:15Z",
    "closed_at": null,
    "body": "Some of the most important automation is not triggered by activity, but it is _inactivity_. This bot should have a way to do work on regular intervals or at some predetermined time in the future.\n### Timers\n\nThese would be behaviors that run at regular intervals and do regular maintenance. The only difference between these and the existing behaviors is that they're triggered by a timer and not a an action.\n\nExamples:\n- Bump inactive threads\n- Close stale issues and pull requests\n- Create a release\n### Scheduled actions\n\nThese are one-off actions that just need to happen at some predetermined time in the future.\n\nExamples:\n- Temporarily ban bad actors and automatically un-ban them after some interval\n- Miscellaneous reminders, like \"review this after v2.1 is out\"\n## \n- [ ] Figure out config syntax for timers\n- [ ] Figure out how scheduled actions are triggered (hubot-like mentions in a comment? e.g. `@probot remind me to check this out in 3 weeks`\n- [ ] Figure out persistence for scheduled actions\n\nKnow of any prior art in bots that have good patterns for these?\n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/27",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/27/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/27/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/27/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/27",
    "id": 182431642,
    "number": 27,
    "title": "Generate API documentation",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-10-12T04:16:00Z",
    "updated_at": "2016-10-12T04:16:00Z",
    "closed_at": null,
    "body": "All of the [documentation for available actions](https://github.com/bkeepers/PRobot/blob/master/docs/configuration.md) is manually crafted right now. It should be generated from source.\n\nSomething like how [remark-lint](https://github.com/wooorm/remark-lint/) generates [docs/rules.md](https://github.com/wooorm/remark-lint/blob/master/doc/rules.md).\n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/21",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/21/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/21/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/21/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/21",
    "id": 182138946,
    "number": 21,
    "title": "Actions to implement",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [
      {
        "id": 457191383,
        "url": "https://api.github.com/repos/bkeepers/PRobot/labels/hacktoberfest",
        "name": "hacktoberfest",
        "color": "ffa500",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-10-10T23:29:04Z",
    "updated_at": "2016-10-30T16:57:12Z",
    "closed_at": null,
    "body": "Here are a list of actions that need implemented. If anyone wants to jump in, these are pretty easy to implement. Check out the [docs for adding an action](https://github.com/bkeepers/PRobot/blob/master/CONTRIBUTING.md#adding-an-action) or one of the merged PRs listed below as an example.\n## Issues\n- [x] assign (#19)\n- [x] comment (#13)\n- [ ] create issue\n- [ ] create milestone\n- [ ] delete comment\n- [x] delete label (#13)\n- [ ] delete milestone\n- [x] label (#13)\n- [ ] remove all labels\n- [ ] replace labels\n- [x] unassign (#20)\n- [ ] update issue\n- [ ] update comment\n- [x] lock (#22)\n- [x] unlock (#22)\n- [ ] update milestone\n## Pull Requests\n- [ ] create pull request\n- [ ] create comment\n- [ ] create comment reply\n- [ ] delete comment\n- [ ] update comment\n- [ ] merge\n- [ ] update pull request\n## Reactions\n- [ ] create for commit comment\n- [x] create for issue\n- [ ] create for issue comment\n- [ ] create for pull request review comment\n- [ ] delete\n## Organizations\n- [ ] add to organization\n- [ ] add to team\n- [ ] add team to repository\n- [ ] create team\n- [ ] create hook\n- [ ] delete team\n- [ ] delete hook\n- [ ] remove team from repo\n- [ ] update hook\n- [ ] update team\n- [ ] ping hook\n- [ ] publicize membership\n- [ ] conceal membership\n- [ ] remove from all teams\n- [ ] remove from organization\n- [ ] remove from team\n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/17",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/17/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/17/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/17/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/17",
    "id": 182049068,
    "number": 17,
    "title": "[Behavior] Auto-assign maintainer to new issues",
    "user": {
      "login": "benbalter",
      "id": 282759,
      "avatar_url": "https://avatars.githubusercontent.com/u/282759?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benbalter",
      "html_url": "https://github.com/benbalter",
      "followers_url": "https://api.github.com/users/benbalter/followers",
      "following_url": "https://api.github.com/users/benbalter/following{/other_user}",
      "gists_url": "https://api.github.com/users/benbalter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benbalter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benbalter/subscriptions",
      "organizations_url": "https://api.github.com/users/benbalter/orgs",
      "repos_url": "https://api.github.com/users/benbalter/repos",
      "events_url": "https://api.github.com/users/benbalter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benbalter/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-10-10T15:47:31Z",
    "updated_at": "2016-10-10T16:22:46Z",
    "closed_at": null,
    "body": "Another behavior of @jekyllbot (that's relatively new), when an issue comes in and @mentions an affinity team, one of the team captains are randomly assigned the issue. They're obviously free to unassigned or change assignment, but it creates a sense of distributed ownership of issues, based on where they are in the codebase.\n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/16",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/16/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/16/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/16/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/16",
    "id": 182047474,
    "number": 16,
    "title": "[Behavior] Automatically create a release when a new tag is pushed",
    "user": {
      "login": "benbalter",
      "id": 282759,
      "avatar_url": "https://avatars.githubusercontent.com/u/282759?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benbalter",
      "html_url": "https://github.com/benbalter",
      "followers_url": "https://api.github.com/users/benbalter/followers",
      "following_url": "https://api.github.com/users/benbalter/following{/other_user}",
      "gists_url": "https://api.github.com/users/benbalter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benbalter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benbalter/subscriptions",
      "organizations_url": "https://api.github.com/users/benbalter/orgs",
      "repos_url": "https://api.github.com/users/benbalter/repos",
      "events_url": "https://api.github.com/users/benbalter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benbalter/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-10-10T15:41:09Z",
    "updated_at": "2016-10-10T15:41:09Z",
    "closed_at": null,
    "body": "Somewhat related to #15, and a behavior @jekyllbot does that really helps, is to automatically create a new release, based on the contents of the CHANGELOG, whenever a new tag (maybe matching a `vN.N.N` format) is pushed. You can see an example of it [Jekylls Sitemap](https://github.com/jekyll/jekyll-sitemap/releases)\n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/15",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/15/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/15/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/15/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/15",
    "id": 182047101,
    "number": 15,
    "title": "[Behavior] Maintain a changelog",
    "user": {
      "login": "benbalter",
      "id": 282759,
      "avatar_url": "https://avatars.githubusercontent.com/u/282759?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benbalter",
      "html_url": "https://github.com/benbalter",
      "followers_url": "https://api.github.com/users/benbalter/followers",
      "following_url": "https://api.github.com/users/benbalter/following{/other_user}",
      "gists_url": "https://api.github.com/users/benbalter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benbalter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benbalter/subscriptions",
      "organizations_url": "https://api.github.com/users/benbalter/orgs",
      "repos_url": "https://api.github.com/users/benbalter/repos",
      "events_url": "https://api.github.com/users/benbalter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benbalter/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-10-10T15:39:34Z",
    "updated_at": "2016-10-10T15:39:34Z",
    "closed_at": null,
    "body": "When a pull request is merged, add a line to `CHANGELOG.md` or `HISTORY.md`, with the PR title, number, and if the contributor is not a maintainer, give them props, optionally categorizing the updates based on tags.\n\n@jekyllbot does this (with a slightly different behavior that I don't like), but the end result could look somethign like this:\n\n```\n## Head\n\n### Minor\n\n* Make the button red (#123, props @bkeepers)\n\n### Major\n\n* Button is now a switch (#456)\n\n### Development\n\n* Add Rubocop (#789)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/12",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/12/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/12/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/12/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/12",
    "id": 181836507,
    "number": 12,
    "title": "[Behavior] @mention `OWNERS` based on modified files",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-10-08T16:56:30Z",
    "updated_at": "2016-10-08T16:56:30Z",
    "closed_at": null,
    "body": "[OWNERS](https://github.com/bkeepers/OWNERS) is a pattern for declaring who is responsible for different parts of the project. It could be used to automatically @mention reviewers based on files changed, similar to mention-bot (#10).\n\nConfiguration:\n- an [OWNERS](https://github.com/bkeepers/OWNERS) file\n\nExamples:\n- Know of any projects that use a behavior like this?\n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/11",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/11/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/11/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/11/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/11",
    "id": 181836004,
    "number": 11,
    "title": "[Behavior] set expectations for response time",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-10-08T16:46:49Z",
    "updated_at": "2016-10-08T16:54:51Z",
    "closed_at": null,
    "body": "Acknowledging contributions in a timely matter and setting expectations for response is one of the most important things you can do to keep a contributor engaged. Based on recent activity, a bot should be able to let contributors know when they can expect to receive a response. This could maybe be added to [autoresponder](https://github.com/bkeepers/PRobot/blob/master/behaviors/autoresponder.js), or as a separate behavior.\n\nConfiguration:\n- message template - e.g. `Thanks for contributing! Based on recent activity, expect a response in {{ time_to_response }}.`\n\nExamples:\n- Know of any projects that use a behavior like this?\n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/10",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/10/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/10/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/10/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/10",
    "id": 181835606,
    "number": 10,
    "title": "[Behavior] mention-bot",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-10-08T16:40:22Z",
    "updated_at": "2016-10-10T15:45:32Z",
    "closed_at": null,
    "body": "[mention-bot](https://github.com/facebook/mention-bot), which @mentions potential reviewers based on recent git history, works as a node module and should be relatively straight forward to turn it into a behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/9",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/9/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/9/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/9/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/9",
    "id": 181835512,
    "number": 9,
    "title": "[Behavior] auto-close stale issues and pull requests",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-10-08T16:38:26Z",
    "updated_at": "2016-11-21T04:02:44Z",
    "closed_at": null,
    "body": "Configuration:\r\n- delay - number of days to wait before closing\r\n- some kind of conditions for stale issues - e.g. a label, or a rejected code review, or comment content.\r\n\r\nExamples:\r\n- [Jekyll](https://github.com/jekyll/github-metadata/issues/67#issuecomment-251467506)\r\n- Know of any projects that have this behavior?\r\n"
  },
  {
    "url": "https://api.github.com/repos/bkeepers/PRobot/issues/4",
    "repository_url": "https://api.github.com/repos/bkeepers/PRobot",
    "labels_url": "https://api.github.com/repos/bkeepers/PRobot/issues/4/labels{/name}",
    "comments_url": "https://api.github.com/repos/bkeepers/PRobot/issues/4/comments",
    "events_url": "https://api.github.com/repos/bkeepers/PRobot/issues/4/events",
    "html_url": "https://github.com/bkeepers/PRobot/issues/4",
    "id": 181789181,
    "number": 4,
    "title": "Plugin API",
    "user": {
      "login": "bkeepers",
      "id": 173,
      "avatar_url": "https://avatars.githubusercontent.com/u/173?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeepers",
      "html_url": "https://github.com/bkeepers",
      "followers_url": "https://api.github.com/users/bkeepers/followers",
      "following_url": "https://api.github.com/users/bkeepers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeepers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeepers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeepers/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeepers/orgs",
      "repos_url": "https://api.github.com/users/bkeepers/repos",
      "events_url": "https://api.github.com/users/bkeepers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeepers/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-10-07T23:47:37Z",
    "updated_at": "2016-10-07T23:47:37Z",
    "closed_at": null,
    "body": "Before the first release, there should be a clearly defined plugin API and easy way to create new behaviors as node packages. The plugin API should have convenience methods for performing common actions on the item that triggered the event (e.g. comment on a PR, update statuses, apply labels, etc.).\n\nThe naive example in the README right now is something like this:\n\n``` javascript\nrobot.on('pull', function(event) {\n  robot.comment(\"Thanks for the pull request! We'll review it within 72 hours!\");\n});\n```\n\nThe [first behavior](https://github.com/bkeepers/PRobot/blob/master/behaviors/autoresponder.js) is looking something like this:\n\n``` javascript\nmodule.exports = {\n  webhook: 'issues', // name of webhook event\n  action: function(event, github) {\n    // event - the webhook event\n    // github - API client: https://mikedeboer.github.io/node-github/\n  }\n};\n```\n\nI'm planning to implement a few other behaviors before figuring out what the API should look like.\n"
  }
]
